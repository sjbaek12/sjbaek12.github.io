library(RSelenium)
library(rvest)
library(tm)
library(httr)
library(stringr)


## CMD 콘솔창에서 r_selenium directory로 이동후에 아래를 입력한다

java -Dwebdriver.gecko.driver="geckodriver.exe" -jar selenium-server-standalone-3.11.0.jar -port 4445


## 다시 R로 돌아와서..(모난연구소 참조)

remDr<-remoteDriver(remoteServerAddr="localhost", port=4445L, browserName="chrome")
remDr$open() 

remDr$navigate("http://www.naver.com") ## 네이버로 이동한다.

## 스크래핑 타겟으로 이동한다.

remDr$navigate("https://search.shopping.naver.com/detail/detail.nhn?nv_mid=5365196529&cat_id=50000448&frm=NVSHATC&query=%EC%98%A4%ED%9C%98")


개발자 도구를 활용하여 페이지를 넘어가기 위한 액션을 파악한다.

All_review=c() #텍스트를 모으기 위한 백터공간을 만든다.


## 타겟에서 아래에 붙은 페이지를 넘어가기 위해서는 아래가 실행되어야 한다.
<a href="#" class= onclick="shop.detail.ReviewHandler.page(201, '_review_paging');return false;">201</a>   ....> <a 하이퍼링크> 글자 </a>
##########################################################



for(i in 1:210) {  #페이지 수만큼 반복하여 review긁어오기
  a=i #페이지 번호
  first="shop.detail.ReviewHandler.page("        #i를 변수로 받기 위해서 문장을 분해 i자리 앞쪽 (On-click을 찾음)
  secon=", ''); return false;"                   #i자리 뒤쪽
  script=paste(first,a,secon,sep='') # a는 자동적으로 i를 받아 변하고 paste를 통해 한문장이 됨.


  pagemove <- remDr$executeScript(script, args = 1:2)           #args 요 부분 의미는 잘 모르겠음 --->  args = list()으로 해도 작동함.
  source<-remDr$getPageSource()[[1]]    #페이지 소스를 모두 가져와서 
  main <- read_html(source)               ## 해당페이지의 html을 읽고
  mainfo=html_nodes(main,css='.atc')      ## review와 연관된 css='.atc' 골라서
  review=mainfo%>%html_text() #텍스트만 가져오기
  All_review=c(All_review,review) #텍스트 저장
}


"first="shop.detail.ReviewHandler.page(201, ''); return false;" 


## paste 함수##########################################################

paste (..., sep = " ", collapse = NULL)
paste0(..., collapse = NULL)
paste는 나열된 원소 사이에 공백을 두고 결과값을 출력합니다.
paste0은 나열된 원소 사이에 공백없이 출력합니다.

1) sep
paste(1,2,3,4, sep='-')                 # - 로 구분하기
[1] "1-2-3-4"

paste('function','in','r', sep='   ')   # 공백(스페이스바)로 구분하기
[1] "function   in   r"

paste('문자열을','합쳐','주세요', sep='')  # 공백으로 구분하기 (공백없음)
[1] "문자열을합쳐주세요"



#### 다음은 Naver의 레이보우블루투스 컴퓨터의 사용후기를 클롤링 한다. ###########

library(RSelenium)
library(rvest)
library(tm)
library(httr)
library(stringr)

---cdm에서----
java -Dwebdriver.gecko.driver="geckodriver.exe" -jar selenium-server-standalone-3.11.0.jar -port 4445

remDr$navigate("https://smartstore.naver.com/tovtov/products/3434090810?NaPm=ct%3Djpnn5nh4%7Cci%3Dshopn%7Ctr%3Dhdlt%7Chk%3D6fcfebe5a63aebc9a676228813b2528a8eb22b06#revw")
All_review=c()


--- 버튼을 click하는 명령이다.---

버튼 클리 동작은 클롬 개발자 창에서 element 창에서 해당라인에서 우클릭하고, Copy에서 copy xpath를 선택하면 된다.
아래는 네번재 버튼을 클릭하는 명령어 이다.
이는 앞서 선택한 명령어인 remDr$executeScript와 다른 형식이다.

test <- remDr$findElement(using='xpath', value = '//*[@id="area_review_list"]/nav/a[4]')
test$clickElement()

source<-remDr$getPageSource()[[1]]
main <- read_html(source)
mainfo=html_nodes(main,css='.review_text') 
review=mainfo%>%html_text()
All_review=c(All_review,review)

---- 이제 완성된 for 문으로 만들면 다음과 같다.

All_review=c()
test <- NULL

for(i in 1:5) { 
a=i
first='//*[@id="area_review_list"]/nav/a['
secon="]"
script=paste(first,a,secon,sep='')
test <- remDr$findElement(using='xpath', value = script)
test$clickElement()  
source<-remDr$getPageSource()[[1]]
main <- read_html(source)
mainfo=html_nodes(main,css='.review_text') 
review=mainfo%>%html_text()
All_review=c(All_review,review) }

